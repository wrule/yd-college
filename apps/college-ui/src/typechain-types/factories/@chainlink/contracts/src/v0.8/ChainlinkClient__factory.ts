/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ChainlinkClient,
  ChainlinkClientInterface,
} from "../../../../../@chainlink/contracts/src/v0.8/ChainlinkClient";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
] as const;

export class ChainlinkClient__factory {
  static readonly abi = _abi;
  static createInterface(): ChainlinkClientInterface {
    return new Interface(_abi) as ChainlinkClientInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ChainlinkClient {
    return new Contract(address, _abi, runner) as unknown as ChainlinkClient;
  }
}
