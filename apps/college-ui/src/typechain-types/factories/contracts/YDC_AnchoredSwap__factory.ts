/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  YDC_AnchoredSwap,
  YDC_AnchoredSwapInterface,
} from "../../contracts/YDC_AnchoredSwap";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Error_InsufficientETH",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ydcAmount",
        type: "uint256",
      },
    ],
    name: "Error_InsufficientYDC",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ydcAmount",
        type: "uint256",
      },
    ],
    name: "Event_ETH2YDC",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ydcAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Event_YDC2ETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "EQ_1YDC_ETH_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ETH2YDC",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ydcAmount",
        type: "uint256",
      },
    ],
    name: "YDC2ETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "acceptOwnershipForMe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040527349155f5a274fc463e6ef9cefc122b51cd899303e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b506100746100fb60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100e65760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100dd919061023f565b60405180910390fd5b6100f58161010360201b60201c565b5061025a565b600033905090565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556101378161013a60201b60201c565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610229826101fe565b9050919050565b6102398161021e565b82525050565b60006020820190506102546000830184610230565b92915050565b610df9806102696000396000f3fe6080604052600436106100865760003560e01c806379ba50971161005957806379ba5097146101005780638da5cb5b146101175780639937e22414610142578063e30c39781461016b578063f2fde38b1461019657610086565b8063110d64c01461008b5780632208183314610095578063289906b8146100c0578063715018a6146100e9575b600080fd5b6100936101bf565b005b3480156100a157600080fd5b506100aa610409565b6040516100b791906109e3565b60405180910390f35b3480156100cc57600080fd5b506100e760048036038101906100e29190610a2f565b610412565b005b3480156100f557600080fd5b506100fe610640565b005b34801561010c57600080fd5b50610115610654565b005b34801561012357600080fd5b5061012c6106e3565b6040516101399190610a9d565b60405180910390f35b34801561014e57600080fd5b5061016960048036038101906101649190610ae4565b61070c565b005b34801561017757600080fd5b5061018061076f565b60405161018d9190610a9d565b60405180910390f35b3480156101a257600080fd5b506101bd60048036038101906101b89190610ae4565b610799565b005b600064174876e800346101d29190610b6f565b90506001811015610223576101e5610846565b346040517f2c546f4c00000000000000000000000000000000000000000000000000000000815260040161021a929190610ba0565b60405180910390fd5b600064174876e800826102369190610bc9565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518163ffffffff1660e01b815260040161029190610c68565b602060405180830381865afa1580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d29190610c9d565b73ffffffffffffffffffffffffffffffffffffffff1663da1919b36102f5610846565b846040518363ffffffff1660e01b8152600401610313929190610ba0565b600060405180830381600087803b15801561032d57600080fd5b505af1158015610341573d6000803e3d6000fd5b50505050600081346103539190610cca565b905060008111156103ad57610366610846565b73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103ab573d6000803e3d6000fd5b505b6103b5610846565b73ffffffffffffffffffffffffffffffffffffffff167f7505a050a9ca225af4247860d6b8b8524e248b9165b09dfbe5ce8a25fac3e89683856040516103fc929190610cfe565b60405180910390a2505050565b64174876e80081565b600181101561046157610423610846565b816040517ff7e9cb15000000000000000000000000000000000000000000000000000000008152600401610458929190610ba0565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518163ffffffff1660e01b81526004016104ba90610c68565b602060405180830381865afa1580156104d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fb9190610c9d565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd61051e610846565b30846040518463ffffffff1660e01b815260040161053e93929190610d27565b6020604051808303816000875af115801561055d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105819190610d96565b50600064174876e800826105959190610bc9565b905061059f610846565b73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105e4573d6000803e3d6000fd5b506105ed610846565b73ffffffffffffffffffffffffffffffffffffffff167f1b907278f6b14d73a1249f3f7bc3011d8999a549904d2858573967bcda71690a8383604051610634929190610cfe565b60405180910390a25050565b61064861084e565b61065260006108d5565b565b600061065e610846565b90508073ffffffffffffffffffffffffffffffffffffffff1661067f61076f565b73ffffffffffffffffffffffffffffffffffffffff16146106d757806040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106ce9190610a9d565b60405180910390fd5b6106e0816108d5565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8073ffffffffffffffffffffffffffffffffffffffff166379ba50976040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561075457600080fd5b505af1158015610768573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107a161084e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166108016106e3565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600033905090565b610856610846565b73ffffffffffffffffffffffffffffffffffffffff166108746106e3565b73ffffffffffffffffffffffffffffffffffffffff16146108d357610897610846565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108ca9190610a9d565b60405180910390fd5b565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561090381610906565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000819050919050565b6109dd816109ca565b82525050565b60006020820190506109f860008301846109d4565b92915050565b600080fd5b610a0c816109ca565b8114610a1757600080fd5b50565b600081359050610a2981610a03565b92915050565b600060208284031215610a4557610a446109fe565b5b6000610a5384828501610a1a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8782610a5c565b9050919050565b610a9781610a7c565b82525050565b6000602082019050610ab26000830184610a8e565b92915050565b610ac181610a7c565b8114610acc57600080fd5b50565b600081359050610ade81610ab8565b92915050565b600060208284031215610afa57610af96109fe565b5b6000610b0884828501610acf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b7a826109ca565b9150610b85836109ca565b925082610b9557610b94610b11565b5b828204905092915050565b6000604082019050610bb56000830185610a8e565b610bc260208301846109d4565b9392505050565b6000610bd4826109ca565b9150610bdf836109ca565b9250828202610bed816109ca565b91508282048414831517610c0457610c03610b40565b5b5092915050565b600082825260208201905092915050565b7f5944435f546f6b656e0000000000000000000000000000000000000000000000600082015250565b6000610c52600983610c0b565b9150610c5d82610c1c565b602082019050919050565b60006020820190508181036000830152610c8181610c45565b9050919050565b600081519050610c9781610ab8565b92915050565b600060208284031215610cb357610cb26109fe565b5b6000610cc184828501610c88565b91505092915050565b6000610cd5826109ca565b9150610ce0836109ca565b9250828203905081811115610cf857610cf7610b40565b5b92915050565b6000604082019050610d1360008301856109d4565b610d2060208301846109d4565b9392505050565b6000606082019050610d3c6000830186610a8e565b610d496020830185610a8e565b610d5660408301846109d4565b949350505050565b60008115159050919050565b610d7381610d5e565b8114610d7e57600080fd5b50565b600081519050610d9081610d6a565b92915050565b600060208284031215610dac57610dab6109fe565b5b6000610dba84828501610d81565b9150509291505056fea2646970667358221220ff8f08fd625ecc4ebe8ff39eb060d8862056d61d4cad44a92ccce20414b08ff264736f6c634300081c0033";

type YDC_AnchoredSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YDC_AnchoredSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YDC_AnchoredSwap__factory extends ContractFactory {
  constructor(...args: YDC_AnchoredSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      YDC_AnchoredSwap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): YDC_AnchoredSwap__factory {
    return super.connect(runner) as YDC_AnchoredSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YDC_AnchoredSwapInterface {
    return new Interface(_abi) as YDC_AnchoredSwapInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): YDC_AnchoredSwap {
    return new Contract(address, _abi, runner) as unknown as YDC_AnchoredSwap;
  }
}
